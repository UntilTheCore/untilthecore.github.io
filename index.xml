<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Welcome</title>
    <link>https://untilthecore.github.io/</link>
    <description>Recent content on Welcome</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 01 May 2020 15:15:09 +0800</lastBuildDate>
    
	<atom:link href="https://untilthecore.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CSS布局</title>
      <link>https://untilthecore.github.io/posts/css%E5%B8%83%E5%B1%80/</link>
      <pubDate>Fri, 01 May 2020 15:15:09 +0800</pubDate>
      
      <guid>https://untilthecore.github.io/posts/css%E5%B8%83%E5%B1%80/</guid>
      <description>float布局 常见问题 原理：在父盒子浮动元素的最后加上一个盒子，并给这个盒子设置属性&amp;quot;clear:both&amp;rdquo;，这样就可以实现最基础的清除浮动了。 但是这样有个缺点，就是总要去手动增加一个html元素，然后为这个元素设置css样式，太麻烦。什么方式可以避免呢？那就是使用css伪元素。对css伪元素不太了解的话，可以看这里。 使用伪元素的方式清除浮动，则只需要为浮动盒子的父盒子添加一个类样式。类样式代码如下：
/* 不兼容ie低版本 */ .clearfix { content:&amp;#34;&amp;#34;; display:block; clear:both; } /* 兼容ie低版本 */ /* after伪元素清除法 */ .clearfix:after { content: &amp;#34;&amp;#34;; display: block; height: 0; clear: both; visibility: hidden; } .clearfix: { *zoom: 1; /*为i6/i7老式浏览器准备*/ } /* 双伪元素清除法 */ .clearfix:before, .clearfix:after { content: &amp;#34;&amp;#34;; display: table; } .clearfix:after { clear: both; } .clearfix: { *zoom: 1; /*为i6/i7老式浏览器准备*/ } 2. 图片logo与底部边框有间隙 给img标签添设置属性&amp;quot;vertical-align: middle;&amp;ldquo;值可以是这个属性的其他值。
3. 边框影响了布局 将border属性改为使用outline属性。同样都可以显示边框，但outline不影响布局。
4. 块元素居中显示 在pc上布局时，有时候要对一个固定宽度的块元素设置居中显示，可以使用&amp;quot;margin:0 auto;&amp;ldquo;的方式，但是这并不好，因为假如这个要居中显示的元素就需要一个上外边距，那么使用&amp;quot;margin:0 auto;&amp;ldquo;会破坏布局。比较好的方式是为元素设置以下两种属性：</description>
    </item>
    
    <item>
      <title>CSS应知应会</title>
      <link>https://untilthecore.github.io/posts/css%E5%BA%94%E7%9F%A5%E5%BA%94%E4%BC%9A/</link>
      <pubDate>Fri, 01 May 2020 14:59:14 +0800</pubDate>
      
      <guid>https://untilthecore.github.io/posts/css%E5%BA%94%E7%9F%A5%E5%BA%94%E4%BC%9A/</guid>
      <description></description>
    </item>
    
    <item>
      <title>HTML入门之HTML常用标签</title>
      <link>https://untilthecore.github.io/posts/html%E5%85%A5%E9%97%A8%E4%B9%8Bhtml%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Wed, 29 Apr 2020 11:00:02 +0800</pubDate>
      
      <guid>https://untilthecore.github.io/posts/html%E5%85%A5%E9%97%A8%E4%B9%8Bhtml%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      <description>标签 常用属性 作用     a href \ target 1、跳转外部页面；2、跳转内部锚点；3、跳转到邮箱或电话   img src \ alt \ width \ height 发出 get 请求，展示一张图片   form action \ method 表单。发送 get 或 post 请求，然后刷新页面   input type [ &amp;ldquo;text&amp;rdquo; , &amp;ldquo;password&amp;rdquo; , &amp;ldquo;file&amp;rdquo;，&amp;ldquo;submit&amp;rdquo;，&amp;ldquo;hidden&amp;quot;等 ] \ checked \ value \ disabled \ name 让用户输入内容。通过 type 确定不同的 input 内容，通常搭配 form 使用   table - 表格。使用相对较少    1.</description>
    </item>
    
    <item>
      <title>HTML入门笔记1</title>
      <link>https://untilthecore.github.io/posts/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Tue, 28 Apr 2020 18:12:06 +0800</pubDate>
      
      <guid>https://untilthecore.github.io/posts/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</guid>
      <description>1.HTML 是怎么产生的？  Tim Berners-Lee &amp;ndash; 万维网的创建者  探寻互联网的初始，那么就必然要了解一下李老爷子本人，这位牛人为如今精彩纷呈的互联网世界打下了坚实的地基。1989 年他开发了世上第一个浏览器和第一个服务器，由此种下了互联网世界的种子，而且他发明的 WWW、URL、HTTP 一直延续至今。
那这个东西到底是怎么产生的呢？1、因为一杯咖啡，这让我联想到了 java；2、为了可以上网冲浪；
2.HTML 怎么快速开始 现代的编辑器配合 Emmet 语法可以快速创建一个 HTML 的骨架，虽然这节省了我们书写骨架代码的时间，但还是有必要了解一下这些内容是什么。 在 vscode 中创建一个 HTML 的文件，使用 Emmet 语法输入! + tab键即可快速生成 html 骨架。
3.HTML 常用的章节标签有哪些？    章节标签 介绍     h1~h6 文章内容标题   section 相对于 article 元素更加广泛，每个区块都可以使用，比如页面里的导航菜单、文章正文、文章的评论等。   article 代表文档、页面或应用程序中独立的、完整的、可以独自被外部引用的内容。它可以是一篇博客、一篇帖子、一段用户评论   p 段落   header 头部   footer 页脚   main 主要内容。内容主体区域，放在在 header 和 footer 中间   aside 旁支内容   div 划分    4.</description>
    </item>
    
    <item>
      <title>正确使用hugo主题的姿势</title>
      <link>https://untilthecore.github.io/posts/%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8hugo%E4%B8%BB%E9%A2%98%E7%9A%84%E5%A7%BF%E5%8A%BF/</link>
      <pubDate>Mon, 27 Apr 2020 22:28:15 +0800</pubDate>
      
      <guid>https://untilthecore.github.io/posts/%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8hugo%E4%B8%BB%E9%A2%98%E7%9A%84%E5%A7%BF%E5%8A%BF/</guid>
      <description>在《如何用hugo搭建个人博客中》已经介绍了简单的主题引入办法，这里就不再赘述了。
现在我们来讲讲如何配置我们下载的新主题！（内容可能不多不全，Hugo的使用还在摸索阶段）
  下载主题前要先看主题的Demo，看是否是自己想要的。没有Demo示例给看那就clone下来后跑起来看看是不是中意的，但是有的clone到的主题有可能较精简，怎么办呢？往下看。
  选好中意的主题了，那么就一定要看作者的配置介绍，这个配置介绍一般都是介绍如何配置config.toml，但这个介绍可能不够全，那么就要自己看clone下来的主题中这个文件夹exampleSite中的config.toml。有的主题还有full-config.toml,这个内容更全面。以我使用的主题为例，路径结构为：themes\hello-friend-ng\exampleSite\config.toml
  接下来我将以我使用的主题为例，介绍config.toml配置内容
[[menu.main]] identifier = &amp;#34;blog&amp;#34; name = &amp;#34;Blogs&amp;#34; url = &amp;#34;/posts&amp;#34; [[menu.main]] name = &amp;#34;Categories&amp;#34; identifier = &amp;#34;categories&amp;#34; url = &amp;#34;/categories/&amp;#34; [[menu.main]] identifier = &amp;#34;tags&amp;#34; name = &amp;#34;Tags&amp;#34; url = &amp;#34;/tags/&amp;#34; [[menu.main]] identifier = &amp;#34;about&amp;#34; name = &amp;#34;About&amp;#34; url = &amp;#34;about/&amp;#34; 有[[menu.main]]即配置导航菜单，对应的地方如图：
[[params.social]] name = &amp;#34;email&amp;#34; url = &amp;#34;mailto:untilthecore@gmail.com&amp;#34; [[params.social]] name = &amp;#34;github&amp;#34; url = &amp;#34;https://github.com/UntilTheCore&amp;#34; 有[[params.social]]即配置图标链接，对应地方如图：
baseurl = &amp;#34;https://untilthecore.github.io/&amp;#34; title = &amp;#34;My Blog&amp;#34; languageCode = &amp;#34;zh-Hans&amp;#34; theme = &amp;#34;hello-friend-ng&amp;#34;  baseurl：配置站点基址，如果要放在github上或者自己的云服务器上，请正确配置地址，否则出了能访问主页，其他地方都是 404 title：设置标题 languageCode：设置语言 theme：设置主题  其他的小地方的配置有注释，配合本地服务器可以方面查看修改后的效果。</description>
    </item>
    
    <item>
      <title>使用hugo搭建个人博客</title>
      <link>https://untilthecore.github.io/posts/%E5%A6%82%E4%BD%95%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Mon, 27 Apr 2020 13:06:46 +0800</pubDate>
      
      <guid>https://untilthecore.github.io/posts/%E5%A6%82%E4%BD%95%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>阅读前你需要了解这些内容：  git MarkDown  使用 Hugo 搭建博客的步骤非常简单。
按照官网 Quick Start 即可快速创建一个站点。此文旨在对官方文档细节补充以及部署到自己的github上。
  下载Hugo
  解压出对应包中的Hugo.exe到一个空目录
  将 2 中存放Hugo.exe的目录添加到系统变量&amp;quot;path&amp;quot;中。（不会设置？点这里）
  进入Hugo官网 点击 Quick Start
  当下载并设置好Hugo后，就可以直接从Step 2开始操作。
# 这个 quickstart 请改成你想要的名字,最好对应你github上的名字且全小写 # 比如：untilthecore.github.io-generator # 这个命令会生成 untilthecore.github.io-generator 的文件夹 # 这个文件夹就是博客站点的生成器，为了方便知道这个文件夹是干什么的，在最后加上 generator，当然 creator 也行 hugo new site quickstart # 那么真正要输入的命令为 hugo new site untilthecore.github.io-generator   当得到站点生成器文件夹后，使用 cd 命令进入文件夹并依次执行以下命令
# 为 untilthecore.github.io-generator 初始化 git 仓库 git init # 为站点设置一个主题（这个主题可以修改） git submodule add https://github.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://untilthecore.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://untilthecore.github.io/about/</guid>
      <description>About me 才疏学浅，一个平凡的编码者。
欢迎访问我的github
欢迎访问我的语雀
欢迎访问我的掘金</description>
    </item>
    
  </channel>
</rss>