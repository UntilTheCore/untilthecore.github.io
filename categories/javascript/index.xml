<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on Welcome</title>
    <link>https://untilthecore.github.io/categories/javascript/</link>
    <description>Recent content in JavaScript on Welcome</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 03 Jun 2020 23:35:27 +0800</lastBuildDate>
    
	<atom:link href="https://untilthecore.github.io/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaScript对象基本用法</title>
      <link>https://untilthecore.github.io/posts/javascript%E5%AF%B9%E8%B1%A1%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
      <pubDate>Wed, 03 Jun 2020 23:35:27 +0800</pubDate>
      
      <guid>https://untilthecore.github.io/posts/javascript%E5%AF%B9%E8%B1%A1%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
      <description>对象 对象是无序的数据集合，是键值对的集合。
对象的学习可以概括为增、删、改、查。
如何创建对象？  使用字面量（&amp;quot;{}&amp;quot;）  let obj = { name: &amp;#39;zhangsan&amp;#39;, age: 18 } new Object()  let obj = new Object({&amp;#39;name&amp;#39;:&amp;#39;张三&amp;#39;,&amp;#39;age&amp;#39;:18}) 注意：对象内的键名是字符串，可以是任意字符，它不是标识符（关于标识符的内容可以看这里）。键名的字符串引号可以省略，但是省略后就要遵守标识符规则了。但是就算引号省略了，键名还是字符串，这是一定的。
知道了键名一定是字符串，现在来看看一些特殊的地方。如果我们在创建对象的时候给键名加上了引号，那么里面的内容数字有多长都不会影响最终结果
那要是在写的时候不在键名上加上引号呢？会发生什么？
正如图中显示的，没有加上引号的键名会被优化成科学计数法的方式来显示。为了不让产生非预期结果，在创建对象时，键名最好加上引号。
使用常量做键名已经了解了，那变量是否可以用作键名呢？答案是可以的。
let person = &amp;#39;xm&amp;#39; let obj = { person: &amp;#39;xiaoming&amp;#39;, age: 18 } // person就是属性名,虽然没写引号，但它就是字符串 let obj1 = { [person]: &amp;#39;xiaoming&amp;#39;, age: 18 } // [person]的值才是属性名 如何删除对象的属性 使用关键字delete
通过在查中的查找对象属性的方法可以以不同方式去删除对象中的特定属性和对应的属性值。
let obj = { name: &amp;#39;zhangsan&amp;#39;, age: 18 } delete obj[&amp;#39;name&amp;#39;] 如何查看对象的属性 使用 Object.</description>
    </item>
    
    <item>
      <title>JavaScript初识</title>
      <link>https://untilthecore.github.io/posts/javascript%E5%88%9D%E8%AF%86/</link>
      <pubDate>Mon, 01 Jun 2020 23:11:21 +0800</pubDate>
      
      <guid>https://untilthecore.github.io/posts/javascript%E5%88%9D%E8%AF%86/</guid>
      <description>初学 JavaScript 要掌握的知识有哪些呢？
1.表达式和语句 表达式： 一个式子，它具有表达某些信息的能力。比如1+2表达式的值为 3。需要注意的地方，console.log表达式的值为函数本身，但是console.log(1)表达式的值为 undefined，只是在控制台中显示的内容为 1。
语句： 描述一段内容的句子。比如var a = 1
它们两者的区别在于：
 表达式一般都有值，语句可能有也可能没有。 语句一般会改变环境，比如声明或者赋值。  但这些都不绝对，特殊情况特殊看待。
2. 标识符的规则 在对变量名等标识符命名的时候并非随心所欲随便命名的，要遵守一定的约定规则。首先 JavaScript 是对大小写敏感的，a和A会被严格区分，所以有时候在函数命名上要小心避免上下文名称不同造成的意外错误。
标识符第一个字符命名规则：
 不能是数字； 可以是 Unicode 字符或$、_和中文；  标识符第二个及以后的字符命名规则：
 可以为任意字符；  注：标识符的命名要好认、好记通俗易懂。不要写很多个_或是使用.这种比较特殊的字符。标识符要写时好写，后面 review 时要好懂才行。
3.条件判断语句 &amp;ldquo;if&amp;hellip;else&amp;hellip;&amp;quot; 是常用条件判断语句
// 伪代码 if(表达式){ 语句1 ... }else { 语句2 ... } 在 if 的块中的语句如果只有一句，则可以省略外面的花括号，只写这条语句，但是不推荐这么做，这样会容易造成阅读时看错代码流程。在 if&amp;hellip;else 代码块中还可以继续继续嵌套 if&amp;hellip;else 代码块来处理复杂的条件判断逻辑。
// 伪代码 if(表达式){ if(表达式){ 语句1 ... }else{ 语句2 ... } 语句3 .</description>
    </item>
    
  </channel>
</rss>